(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{478:function(t,a,s){"use strict";s.r(a);var e=s(44),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"pkg版本规范管理自动化最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pkg版本规范管理自动化最佳实践"}},[t._v("#")]),t._v(" pkg版本规范管理自动化最佳实践")]),t._v(" "),s("h1",{attrs:{id:"前提"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前提"}},[t._v("#")]),t._v(" 前提")]),t._v(" "),s("p",[t._v("何为版本？版本即语义版本控制（ Semantic version 后面简称为 SemVer ）是一种版本控制系统，在过去几年中一直在不断发展。 随着每天都在构建新的插件，插件，扩展和库，拥有通用的软件开发项目版本化方法是一件好事，可以帮助我们跟踪正在发生的事情。")]),t._v(" "),s("p",[t._v("SemVer 的格式式为 x.y.z，其中：")]),t._v(" "),s("p",[t._v("x代表主要版本( Major )")]),t._v(" "),s("p",[t._v("y代表次要版本( Minor )")]),t._v(" "),s("p",[t._v("z代表补丁( Patch )")]),t._v(" "),s("h2",{attrs:{id:"semver如何工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#semver如何工作"}},[t._v("#")]),t._v(" SemVer如何工作？")]),t._v(" "),s("p",[t._v("通过 SemVer 来确定你应该发布的版本类型是很简单的。")]),t._v(" "),s("p",[t._v("如果你修复 bug 或者一些细节修改，那么这将被归类为补丁，在这种情况下你应该升级z。")]),t._v(" "),s("p",[t._v("如果你以向后兼容的方式实现新功能，那么你将升级y，因为这就是所谓的次要版本。")]),t._v(" "),s("p",[t._v("另一方面，如果你实现了可能破坏现有API的新东西，你需要升级x，因为它是一个主要版本（ Major ）。想要了解更多请看后面的<更多须知>。")]),t._v(" "),s("h1",{attrs:{id:"开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[t._v("#")]),t._v(" 开始")]),t._v(" "),s("p",[t._v("语义化的版本控制对应用来说是非常重要的，当然，让版本升级就变成了一件看似不重要却非常重要的事情，在我们开发过程中，或者你遇到过这样的情况？")]),t._v(" "),s("ul",[s("li",[t._v("由于版本控制概念模糊或者忘记，build 完应用都是随便改的版本或者是完全忘记修改版本。")]),t._v(" "),s("li",[t._v("每次 build 完需要改版本太麻烦，懒得改。")])]),t._v(" "),s("p",[t._v("基于这样的场景下，我开发了这款自动版本升级管理工具 "),s("a",{attrs:{href:"https://www.npmjs.com/package/auto-vers",target:"_blank",rel:"noopener noreferrer"}},[t._v("auto-vers"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("github: https://github.com/zerolty/auto-version")]),t._v(" "),s("h1",{attrs:{id:"相同库比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相同库比较"}},[t._v("#")]),t._v(" 相同库比较")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("项目")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[s("a",{attrs:{href:"https://github.com/yahoo/npm-auto-version",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm-auto-version"),s("OutboundLink")],1)]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://www.npmjs.com/package/update-version",target:"_blank",rel:"noopener noreferrer"}},[t._v("update-version"),s("OutboundLink")],1)]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://github.com/zerolty/auto-version",target:"_blank",rel:"noopener noreferrer"}},[t._v("auto-vers"),s("OutboundLink")],1)])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("git tag")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("支持")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不支持")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("自动更新")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("不支持")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("支持")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("提示更新")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("不支持")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不支持")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("支持")])])])]),t._v(" "),s("h1",{attrs:{id:"手动与auto-vers比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手动与auto-vers比较"}},[t._v("#")]),t._v(" 手动与auto-vers比较")]),t._v(" "),s("p",[t._v("下面是我们需要手动改（前提需要知道改成什么，并且不能忘记修改！）\n"),s("img",{attrs:{src:"https://s3.qiufeng.blue/blog/1568533450852.gif",alt:"auto-vers-manual.gif"}})]),t._v(" "),s("p",[t._v("下面是使用了auto-vers的方式。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3.qiufeng.blue/blog/1568533451244.gif",alt:"auto-vers-auto.gif"}})]),t._v(" "),s("h1",{attrs:{id:"拥有的功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拥有的功能"}},[t._v("#")]),t._v(" 拥有的功能")]),t._v(" "),s("ul",[s("li",[t._v("[x] 更新 major, minor, patch, premajor, preminor, prepatch or prerelease")]),t._v(" "),s("li",[t._v("[x] 在更新时候提示选择")]),t._v(" "),s("li",[t._v("[x] 支持git tag方式")]),t._v(" "),s("li",[t._v("[ ] 根据git commit的信息来自动推荐合适的版本")])]),t._v(" "),s("h1",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("p",[t._v("Node 和 Cli两种引入方式。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i auto-vers -g \n")])])]),s("h2",{attrs:{id:"cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[t._v("#")]),t._v(" Cli")]),t._v(" "),s("h3",{attrs:{id:"基础模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础模式"}},[t._v("#")]),t._v(" 基础模式")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" package.json\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("auto-vers -i\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" package.json\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.1"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"确认模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#确认模式"}},[t._v("#")]),t._v(" 确认模式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("auto-vers -i -c\n")])])]),s("p",[s("img",{attrs:{src:"https://s3.qiufeng.blue/blog/1568533450891.gif",alt:"auto-vers-confirm.gif"}})]),t._v(" "),s("h3",{attrs:{id:"提示模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提示模式"}},[t._v("#")]),t._v(" 提示模式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("auto-vers -t\n")])])]),s("p",[s("img",{attrs:{src:"https://s3.qiufeng.blue/blog/1568533450886.gif",alt:"auto-vers-tip1.gif"}})]),t._v(" "),s("p",[t._v("如果你不想更新 , 你可以使用 "),s("code",[t._v("ctrl")]),t._v(" + "),s("code",[t._v("c")]),t._v(" 去停止。")]),t._v(" "),s("h3",{attrs:{id:"提示和git组合模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提示和git组合模式"}},[t._v("#")]),t._v(" 提示和Git组合模式")]),t._v(" "),s("p",[t._v("使用这个选项后，在你选择一个版本后，会自动帮你提交一个commit，并且打上一个tag。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("auto-vers -t -g \n")])])]),s("h3",{attrs:{id:"直接更改模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接更改模式"}},[t._v("#")]),t._v(" 直接更改模式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("auto-vers 1.2.0 \n")])])]),s("p",[t._v("or")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("auto-vers -v 1.2.0 \n")])])]),s("p",[s("img",{attrs:{src:"https://s3.qiufeng.blue/blog/1568533450988.gif",alt:"auto-vers-direct.gif"}})]),t._v(" "),s("p",[t._v("options")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("auto-vers "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(".0\n\nAuto update version "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" your application\nUsage: auto-vers "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nOptions\n-v --version "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        Can update version directly.\n-i --inc --increment "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("level"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        Increment a version by the specified level. Level can\n        be one of: major, minor, patch, premajor, preminor\n        , prepatch or prerelease. Default level is "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'patch'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n        Only one version may be specified.\n-e --extra "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        This is "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" prerelease extra data\n        Such as "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'beta'")]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alpha'")]),t._v("\n-c --confirm\n        Do not update the version directly, you can confirm.\n        This is a safe mode.\n-t --tip\n        Provide choice to you. If you don't know how to update\n        you can choose this option.\n-g --git\n        Help you "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" a tag."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Make you have a "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" repo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h1",{attrs:{id:"最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),s("blockquote",[s("p",[t._v("在你打包完你的项目同时运行这个命令是一个非常好的选择。")])]),t._v(" "),s("h2",{attrs:{id:"基础的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础的方式"}},[t._v("#")]),t._v(" 基础的方式")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"script"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"babel ./src --out-dir ./dist"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tip"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build && auto-vers -t"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build && auto-vers -t -g"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在你写好一段打包命令后，紧接着跟上"),s("code",[t._v("auto-vers -t")]),t._v("，将会给你提示需要升级至多少版本，这对你来说会有一定的指示意义。帮助你更好地区判断你需要升级至什么版本。"),s("code",[t._v("auto-vers -t -g")]),t._v(" 这个命令适合于你单独发布一个版本，可以一键式的帮助你从修改 package.json -> git commit -> git tag -> git push origin [tagname] 整个流程。")]),t._v(" "),s("h2",{attrs:{id:"中级的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中级的方式"}},[t._v("#")]),t._v(" 中级的方式")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"script"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"babel ./src --out-dir ./dist"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"patch"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build && auto-vers -i -c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minor"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build && auto-vers -i minor -c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"major"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build && auto-vers -i major -c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"beta"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build && auto-vers -i prerelease -c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这个方式针对熟悉这个模式的人，每次需要打包只需要执行对应的命令。(增加参数"),s("code",[t._v("-c --confirm")]),t._v(",这是一个安全的方式去升级，帮助你确认是否升级正确，如果对你而言是一个繁琐的步骤即可去掉。）")]),t._v(" "),s("h2",{attrs:{id:"高级的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级的方式"}},[t._v("#")]),t._v(" 高级的方式")]),t._v(" "),s("p",[s("code",[t._v("git-hooks")])]),t._v(" "),s("p",[t._v("如果你没有注册"),s("code",[t._v("pre-commit")]),t._v("和"),s("code",[t._v("post-commit")]),t._v("，可以直接移动进你的.git/hooks目录下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mv githook-*/*  .git/hooks/\n")])])]),s("p",[t._v("如果你本地存在hooks，将项目下的hook，\b手动添加到你的\bhook下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cat githook-*/pre-commit >> .git/hooks/pre-commit\n")])])]),s("p",[t._v("当你提交 commit 的时候，会自动跳出选择界面，选择后升级对应的版本。 （注意：如果在你的程序中有相关 commit 命令，请使用"),s("code",[t._v("--no-verify")]),t._v("来跳过此钩子，否则将循环调用）")]),t._v(" "),s("h1",{attrs:{id:"更多须知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更多须知"}},[t._v("#")]),t._v(" 更多须知")]),t._v(" "),s("h2",{attrs:{id:"为什么选择semver"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择semver"}},[t._v("#")]),t._v(" 为什么选择SemVer")]),t._v(" "),s("blockquote",[s("p",[t._v("因为不规范的版本号基本上没有任何意义。从"),s("code",[t._v("4.1.0")]),t._v(" 升级"),s("code",[t._v("4.2")]),t._v("？ 好的。 为什么？ 为什么不是"),s("code",[t._v("5")]),t._v("？ 为什么不是"),s("code",[t._v("4.1.1")]),t._v("？ 为什么不是"),s("code",[t._v("4.11")]),t._v("？ 为什么不是"),s("code",[t._v("4.1.0-aplha.0")]),t._v("？")])]),t._v(" "),s("blockquote",[s("p",[t._v("严格的指导原则有助于为版本号提供意义。例如，如果您看到版本"),s("code",[t._v("1.3.37")]),t._v("，那么您将知道这是第一个主要版本，但已经有3个次要版本带来了新功能。 但是，您还会注意到这是此次要版本中的第37个补丁，这意味着涉及很多错误（很少或很大）。")])]),t._v(" "),s("blockquote",[s("p",[t._v("它还有助于管理依赖关系，"),s("code",[t._v('"babel-cli": "~6.26.0",')]),t._v(" 我们引入了"),s("code",[t._v("babel-cli")]),t._v(", 可以得知他的版本是"),s("code",[t._v("6.26.0")]),t._v("，他会锁定"),s("code",[t._v("x,y")]),t._v(" 这是一种比较保守的方式, 根据规则可以得知，z的升级不会导致我们api重大的改变以及引入新的功能,。但是如果"),s("code",[t._v("babel-cli")]),t._v("不遵循 SemVer , 在升级z的时候引入了破坏性的变化，这会使得我们的应用出现bug或者变得不可用。正是因为有了 SemVer 的规范，使得我们能够放心地锁定 x,y, 让 z 可以自动升级，因为 z 的升级可能会修复一些小 bug 或者一些细节的改进, 在不破坏我们的应用同时能够对已知bug进行修复。")])]),t._v(" "),s("h2",{attrs:{id:"更多技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更多技巧"}},[t._v("#")]),t._v(" 更多技巧")]),t._v(" "),s("p",[t._v("既然你已经知道 SemVer 是什么以及自动更新的方法，那么讲一些更新的时候注意事项吧。")]),t._v(" "),s("p",[s("strong",[t._v("开始于0.1.0")])]),t._v(" "),s("p",[t._v("使用SemVer时需要注意的一点是它从"),s("code",[t._v("0.1.0")]),t._v("开始，而不是像我们想象的那样从"),s("code",[t._v("0.0.1")]),t._v("开始。这是有道理的，因为我们不是从补丁开始，而是从一组功能开始，作为项目的初稿，因此版本为"),s("code",[t._v("0.1.0")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("在1.0.0之前只是开发阶段")])]),t._v(" "),s("p",[t._v("每当你构建一个新的软件时，总会有一个迷茫阶段，你一直在问自己：我什么时候应该发布第一个正式的主要版本？")]),t._v(" "),s("p",[t._v("以下是一些帮助你回答这个问题的提示：如果您的应用已经在生产中使用或者用户依赖于它，那么你应该已经达到了"),s("code",[t._v("1.0.0")]),t._v("。此外，如果你有打破当前的API，这同样表示你需要升级你的主版本号了。")]),t._v(" "),s("p",[t._v("否则，请记住"),s("code",[t._v("1.0.0")]),t._v("以下的版本基 本上是开发热潮时期，你专注于完成你的功能。在"),s("code",[t._v("1.0.0")]),t._v("之前，你不应该害怕任何破坏性的功能，这样当达到"),s("code",[t._v("1.0.0")]),t._v("时，它就会稳定。")]),t._v(" "),s("p",[s("strong",[t._v("关于预发布pre-realease")])]),t._v(" "),s("p",[t._v("在部署主要版本之前，你通常会经历大量需要一次又一次测试的工作，以确保一切正常。")]),t._v(" "),s("p",[t._v("使用SemVer，可以通过在版本中附加标识符来定义预发布。 例如，版本"),s("code",[t._v("1.0.0")]),t._v("的预发行版可能是"),s("code",[t._v("1.0.0-alpha.1")]),t._v("。 然后，如果需要另一个预版本，它将变为"),s("code",[t._v("1.0.0-alpha.2")]),t._v("，依此类推。")]),t._v(" "),s("h1",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("通过了上面的基础介绍，如果你没有使用 SemVer ，没有理由不在你的下一个项目（或当前项目？）上使用它。 它不仅有助于你的项目版本变得有意义，而且还有助于其他可能将你的项目用作依赖项的人。说了这么多，最终还是希望大家能够更加规范地开发项目不仅帮助他人，而且有利于自己。可能我开发的这个项目不是那么完美，但是初衷是来提高大家规范的效率。有bug请多多指出，有功能上的问题也请直言不讳。")]),t._v(" "),s("h1",{attrs:{id:"友情链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#友情链接"}},[t._v("#")]),t._v(" 友情链接")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://huayifeng.top/",target:"_blank",rel:"noopener noreferrer"}},[t._v("蓝色的秋风"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/renjie1996/Maple-FrontEnd-Blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("无影er"),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[t._v("https://medium.com/fiverr-engineering/major-minor-patch-a5298e2e1798")]),t._v(" "),s("p",[t._v("https://www.sitepoint.com/semantic-versioning-why-you-should-using/")]),t._v(" "),s("h1",{attrs:{id:"更多请关注"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更多请关注"}},[t._v("#")]),t._v(" 更多请关注")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3.qiufeng.blue/blog/gongzhonghao.png",alt:""}})])])}),[],!1,null,null,null);a.default=r.exports}}]);
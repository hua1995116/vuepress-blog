(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{482:function(s,a,t){"use strict";t.r(a);var e=t(44),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"shark-cleaner-一个node-cli-实现的垃圾清理工具-深层清理开发垃圾"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shark-cleaner-一个node-cli-实现的垃圾清理工具-深层清理开发垃圾"}},[s._v("#")]),s._v(" shark-cleaner: 一个Node Cli 实现的垃圾清理工具(深层清理开发垃圾)")]),s._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s3.qiufeng.blue/blog/1584517625611.jpg",alt:"1584517625611"}})]),s._v(" "),t("p",[s._v("就是这个恶毒的提示，太让我烦恼了，一开始我用了腾讯的 lemon 清理工具，但是发现他并不能很好地解决我的问题，没有办法完全找出我的缓存文件。由于本人是 256G Mac （穷....），真的，256G 太不够用了（当然不是因为我....的原因），俗话说贫穷限制了我的想象力，但是没有限制我的创造力。另一点，就是本人是个写前端的，通过对本地的"),t("code",[s._v("node_modules")]),s._v(" ， "),t("code",[s._v("npm")]),s._v(" ，"),t("code",[s._v("yarn cache")]),s._v(" 等缓存的分析，发现让我大吃一惊，几十G的缓存。")]),s._v(" "),t("p",[s._v("基于以上前提，我就开发了一个工具，名字叫 "),t("a",{attrs:{href:"https://github.com/hua1995116/shark-cleaner",target:"_blank",rel:"noopener noreferrer"}},[s._v("shark-cleaner"),t("OutboundLink")],1),s._v("，寓意就是想让它想鲨鱼一样，快速！能够快速找出我本地文件中的软件开发缓存。")]),s._v(" "),t("p",[s._v("这是它已经为我清理出的"),t("code",[s._v("node_modules")]),s._v("垃圾。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s3.qiufeng.blue/blog/1584506218384.jpg",alt:"1584506218384"}})]),s._v(" "),t("h2",{attrs:{id:"技术方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技术方案"}},[s._v("#")]),s._v(" 技术方案")]),s._v(" "),t("h3",{attrs:{id:"社区现状"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#社区现状"}},[s._v("#")]),s._v(" 社区现状")]),s._v(" "),t("h4",{attrs:{id:"_1-直接命令行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-直接命令行"}},[s._v("#")]),s._v(" 1.直接命令行")]),s._v(" "),t("p",[t("strong",[s._v("Mac / Linux:")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" documents\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'node_modules'")]),s._v(" -type d -prune -print -exec "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("strong",[s._v("Windows:")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" documents\n$ FOR /d /r "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" %d "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node_modules"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" DO @IF EXIST "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d"')]),s._v("\n")])])]),t("p",[t("strong",[s._v("Powershell Users:")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Get-ChildItem -Path "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),s._v(" -Include "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node_modules"')]),s._v(" -Recurse -Directory "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Remove-Item -Recurse -Force\n")])])]),t("h4",{attrs:{id:"_2-命令行工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令行工具"}},[s._v("#")]),s._v(" 2.命令行工具")]),s._v(" "),t("p",[s._v("https://github.com/voidcosmos/npkill")]),s._v(" "),t("h3",{attrs:{id:"我的技术方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#我的技术方案"}},[s._v("#")]),s._v(" 我的技术方案")]),s._v(" "),t("p",[s._v("社区有一些相关的方案，但是我想的是能够提供一个可视化的，跨平台的，并且有详细颗粒度信息的工具。")]),s._v(" "),t("p",[s._v("一开始我想的是 "),t("code",[s._v("electron")]),s._v("来做这件事是比较合适的，但是我想等不及想要更加快速的开发，想着是先用命令行代替。（其实核心功能实现后，迁移到 "),t("code",[s._v("electron")]),s._v(" 还是很方便的）。")]),s._v(" "),t("p",[s._v("因此我采用了一种 "),t("code",[s._v("web + node cli")]),s._v("  的方式。下面是工具的主架构，有点类似于"),t("code",[s._v("electron")]),s._v(" 的思路吧")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s3.qiufeng.blue/blog/image-20200323183613601.png",alt:"image-20200323183613601"}})]),s._v(" "),t("h2",{attrs:{id:"功能实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能实现"}},[s._v("#")]),s._v(" 功能实现")]),s._v(" "),t("p",[s._v("视频展示地址: https://s3.qiufeng.blue/shark-cleaner/shark-cleaner.mp4")]),s._v(" "),t("h3",{attrs:{id:"自定义目录扫描"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义目录扫描"}},[s._v("#")]),s._v(" 自定义目录扫描")]),s._v(" "),t("p",[s._v("如果你的项目都在一个目录下，建议填写你的项目主目录，这样会大大加快扫描的速度。")]),s._v(" "),t("img",{attrs:{src:"https://s3.qiufeng.blue/shark-cleaner/shark-init.jpg",width:"300"}}),s._v(" "),t("img",{attrs:{src:"https://s3.qiufeng.blue/shark-cleaner/shark-scanner.jpg",width:"300"}}),s._v(" "),t("img",{attrs:{src:"https://s3.qiufeng.blue/shark-cleaner/shark-computed.jpg",width:"300"}}),s._v(" "),t("h3",{attrs:{id:"支持静态目录扫描"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支持静态目录扫描"}},[s._v("#")]),s._v(" 支持静态目录扫描")]),s._v(" "),t("p",[s._v("由于一些目录是固定的，因此为静态列表扫描方式。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s3.qiufeng.blue/blog/image-20200323201436758.png",alt:"image-20200323201436758"}})]),s._v(" "),t("h3",{attrs:{id:"支持详情查看"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支持详情查看"}},[s._v("#")]),s._v(" 支持详情查看")]),s._v(" "),t("p",[s._v("获取 "),t("code",[s._v("package.json")]),s._v(" 中的 "),t("code",[s._v("author")]),s._v(" 和 "),t("code",[s._v("description")]),s._v(" 进行展示，以及标注完整路径，可以帮助回忆，来确定是否删除。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s3.qiufeng.blue/blog/image-20200323201418168.png",alt:"image-20200323201418168"}})]),s._v(" "),t("h3",{attrs:{id:"支持多选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支持多选"}},[s._v("#")]),s._v(" 支持多选")]),s._v(" "),t("p",[s._v("文件太多了？shift + click 来支持多选模式。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s3.qiufeng.blue/blog/2020-03-23-20.22.19.gif",alt:"2020-03-23-20.22.19"}})]),s._v(" "),t("h3",{attrs:{id:"i18n支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#i18n支持"}},[s._v("#")]),s._v(" i18n支持")]),s._v(" "),t("p",[s._v("国外用户也可以轻松享受到这个工具带来的遍历")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s3.qiufeng.blue/blog/image-20200323202346856.png",alt:"image-20200323202346856"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s3.qiufeng.blue/blog/image-20200323202329590.png",alt:"image-20200323202329590"}})]),s._v(" "),t("h2",{attrs:{id:"如何使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[s._v("#")]),s._v(" 如何使用")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g shark-cleaner\n\nshark\n")])])]),t("h2",{attrs:{id:"todo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[s._v("#")]),s._v(" TODO")]),s._v(" "),t("p",[s._v("1.主流语言的缓存路径支持（包括但不限"),t("code",[s._v("Go")]),s._v(" 、"),t("code",[s._v("Python")]),s._v("、"),t("code",[s._v("Java")]),s._v("等）")]),s._v(" "),t("p",[s._v("2.Node 缓存部分的完善（包括yarn、npm）")]),s._v(" "),t("p",[s._v("3.Electron客户端的支持")]),s._v(" "),t("p",[s._v("4.支持按照时间维护来推测清理（例如某个项目1个月未修改来识别需要清理缓存，提高识别垃圾的准确性。）")]),s._v(" "),t("p",[s._v("5.完善的错误提示（文件清理失败等）")]),s._v(" "),t("p",[s._v("6.logo设计")]),s._v(" "),t("p",[s._v("7.统计已经帮助用户清理的垃圾")]),s._v(" "),t("p",[s._v("8.清理历史记录，帮助用户能够快速下回删除的依赖包。")]),s._v(" "),t("h2",{attrs:{id:"最后"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[s._v("#")]),s._v(" 最后")]),s._v(" "),t("p",[s._v("该工具是我断断续续写了一周完成的，不免有许多"),t("code",[s._v("Bug")]),s._v("，如果使用过程有问题请以 "),t("code",[s._v("Github Issues")]),s._v(" 方式提给我，我会尽量在第一时间进行介入。初衷是，希望它能成为"),t("code",[s._v("一款专为程序员定制的清理垃圾工具")]),s._v("。如果你知道语言缓存目录，请求 pr 或者 Issues 方式提给我。")]),s._v(" "),t("p",[s._v("感谢大家，如果觉得该工具对你起到了作用，请不要吝啬你的 "),t("code",[s._v("star")]),s._v("。(当然非常欢迎感兴趣的小伙伴来贡献代码呀) T T 你们的 "),t("code",[s._v("star")]),s._v(" 是对我最大的鼓励，让我有足够的动力去不断维护它，迭代它，然后，让你们的开发环境变得更美好，更加整洁。")]),s._v(" "),t("p",[s._v("Github地址: https://github.com/hua1995116/shark-cleaner")])])}),[],!1,null,null,null);a.default=r.exports}}]);
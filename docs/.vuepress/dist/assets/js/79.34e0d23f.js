(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{468:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"让浏览器添上终端的彩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#让浏览器添上终端的彩"}},[t._v("#")]),t._v(" 让浏览器添上终端的彩")]),t._v(" "),a("h2",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),a("p",[t._v("随着我们使用内部构建系统的频率增高，没有色彩的日志已经无法满足我们日益增长的效率需求。在浏览器上输出的日志无法像终端一样，通过各种彩色的标记日志，进行快速地定位。因此本文就如何将日志信息在浏览器的输出日志效果和终端一致而展开。")]),t._v(" "),a("p",[a("strong",[t._v("旧版效果")]),t._v(" "),a("img",{attrs:{src:"https://i.loli.net/2019/04/18/5cb8265dc13f4.png",alt:"2C507D74-1CA9-475E-937C-940CD085B0C6.png"}})]),t._v(" "),a("p",[a("strong",[t._v("我们的预期")]),t._v(" "),a("img",{attrs:{src:"https://i.loli.net/2019/04/18/5cb826f8b8ccc.png",alt:"AA5D367A-9B2D-4A4E-ADCA-9C7BC7390B77.png"}})]),t._v(" "),a("p",[t._v("在实现这个功能前，需要抛出一个问题，就是这些彩色的字是如何输出的？引入一个概念，它就是 ANSI escape code。")]),t._v(" "),a("blockquote",[a("p",[t._v("ANSI转义序列是带内信令的标准，用于控制视频文本终端和终端仿真器上的光标位置，颜色和其他选项。 某些字节序列（大多数以Esc和'['开头）嵌入到文本中，终端查找并解释为命令，而不是字符代码。\n--维基百科")])]),t._v(" "),a("p",[t._v("可以说有了 ANSI escape code 才能让我们终端变得变得丰富多彩，本次内容讲解的就是关于色彩相关。")]),t._v(" "),a("p",[t._v("关于色彩输出相信在我们的终端中是非常常见的，例如，"),a("code",[t._v("npm")]),t._v(" 的安装，"),a("code",[t._v("git")]),t._v(" 分支的切换， 运行报错等等。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/04/16/5cb5befdade90.png",alt:"屏幕快照 2019-04-16 下午7.38.42.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/04/16/5cb5bf04714fe.png",alt:"屏幕快照 2019-04-16 下午7.39.29.png"}})]),t._v(" "),a("p",[t._v("正是有了这些色彩，让我们的调试工作效率大大提高，一眼便能看到哪些命令出错了，以及如何解决的方案。")]),t._v(" "),a("p",[t._v("现在我们要做的就是如何将这些色彩日志输出到浏览器端。")]),t._v(" "),a("h2",{attrs:{id:"ansi-color-的形态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ansi-color-的形态"}},[t._v("#")]),t._v(" ansi color 的形态")]),t._v(" "),a("p",[t._v("ANSI转义序列是 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/In-band_signaling",target:"_blank",rel:"noopener noreferrer"}},[t._v("内频带信号方式"),a("OutboundLink")],1),t._v(" 的标准，用于控制视频文本终端和终端仿真器上的光标位置，颜色和其他选项。 某些字节序列（大多数以Esc和'['开头）嵌入到文本中，终端查找并解释为命令，而不是字符代码。Esc 的 ANSI 值为 27 ，8进制表示为 "),a("code",[t._v("\\033")]),t._v(" 16进制表示为 "),a("code",[t._v("\\u001B")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_3-4-bit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-bit"}},[t._v("#")]),t._v(" 3/4 bit")]),t._v(" "),a("p",[t._v("原始规格只有8种颜色，"),a("code",[t._v("ESC[30;47m")]),t._v(" 它是以 "),a("code",[t._v("ESC[")]),t._v(" 开头  "),a("code",[t._v("m")]),t._v(" 结束，中间为code码，以分号进行分割。color取值为30-37，background 取值为 40-47。例如")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo -e "\\u001B[31m hello"\n')])])]),a("p",[t._v("效果如下\n"),a("img",{attrs:{src:"https://i.loli.net/2019/04/18/5cb815d852edb.png",alt:"屏幕快照 2019-04-18 下午2.14.37.png"}})]),t._v(" "),a("p",[t._v("如果想要清除颜色就需要使用 "),a("code",[t._v("ESC [39; 49m")]),t._v("（某些终端不支持） 或者"),a("code",[t._v("ESC[0m")]),t._v("  。后来的终端增加了直接指定 90-97 和 100-107 的“明亮”颜色的能力。")]),t._v(" "),a("p",[t._v("以下是色彩对照表\n"),a("img",{attrs:{src:"https://i.loli.net/2019/04/18/5cb816bd2c024.png",alt:"852CB63D-CB3B-46D1-9053-42BBA579E444.png"}})]),t._v(" "),a("h3",{attrs:{id:"_8-bit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-bit"}},[t._v("#")]),t._v(" 8-bit")]),t._v(" "),a("p",[t._v("由于256色查找表在图形卡上很常见，因此添加了转义序列以从预定义的256种颜色中进行选择")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ESC[ 38;5;<n> m Select foreground color\nESC[ 48;5;<n> m Select background color\n    0-7:  standard colors (as in ESC [ 30–37 m)\n    8-15:  high intensity colors (as in ESC [ 90–97 m)\n    16-231:  6 × 6 × 6 cube (216 colors): 16 + 36 × r + 6 × g + b (0 ≤ r, g, b ≤ 5)\n   232-255:  grayscale from black to white in 24 steps\n")])])]),a("p",[t._v("也就是说在原来的书写方式上增加了新的一位来代表更多的颜色。")]),t._v(" "),a("p",[t._v("在支持更多色彩的终端中，例如:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo -e "\\u001B[38;5;1m hello"\n')])])]),a("p",[t._v("代表输出红色字体。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo -e "\\u001B[48;5;1;38;5;2m hello"\n')])])]),a("p",[t._v("代表输出红色背景，绿色字体。")]),t._v(" "),a("h3",{attrs:{id:"_24-bit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-bit"}},[t._v("#")]),t._v(" 24-bit")]),t._v(" "),a("p",[t._v("随着 16 到 24 位颜色的“真彩色”图形卡变得普遍，Xterm， KDE 的Konsole，以及所有基于 libvte 的终端（包括GNOME终端）支持24位前景和背景颜色设置。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ESC[ 38;2;<r>;<g>;<b> m Select RGB foreground color\nESC[ 48;2;<r>;<g>;<b> m Select RGB background color\n")])])]),a("p",[t._v("例如输出")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo -e "\\u001B[38;2;255;0;0m hello"\n')])])]),a("p",[t._v("代表输出红色的字体代表 rgb(255,0,0)。")]),t._v(" "),a("h2",{attrs:{id:"转化-ansi-color-至-html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转化-ansi-color-至-html"}},[t._v("#")]),t._v(" 转化 ansi color 至 html")]),t._v(" "),a("h3",{attrs:{id:"实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),a("p",[t._v("接下来就实现一个解析 ansi color code 的库，参考了 travis 内置的函数。封装成以下库。")]),t._v(" "),a("p",[t._v("https://github.com/hua1995116/ansi-color-parse")]),t._v(" "),a("p",[a("strong",[t._v("使用")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("parseAnsi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ansi2html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parseHtml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ansi-color-parse'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\u001b[34mHello\\u001b[39m World\\u001b[31m!\\u001b[39m"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseHtml")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//<span class="blue">Hello</span><span> World</span><span class="red">!</span>')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"从-child-process-为什么无法输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从-child-process-为什么无法输出"}},[t._v("#")]),t._v(" 从 child_process 为什么无法输出")]),t._v(" "),a("p",[t._v("在实际运用中，也就是部署系统中，我们并不会直接在终端输出日志，而是会另开一个 child_process 。但是当我们在 child_process 中运行时无法正常输出这些带 ansi code 的代码。下面分别讲述一下两种情况：")]),t._v(" "),a("p",[t._v("1.正常情况我们会在终端直接输出，在这种情况下，色彩输出良好。")]),t._v(" "),a("p",[a("strong",[t._v("color.js")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" chalk "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chalk'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chalk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("red")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Error: a is undefind'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("node color.js\n")])])]),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/04/18/5cb8214f3ea13.png",alt:"屏幕快照 2019-04-18 下午3.03.24.png"}})]),t._v(" "),a("p",[t._v("2.开启另一个 child_process")]),t._v(" "),a("p",[a("strong",[t._v("child_process.js")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'color.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ncmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("stdout: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ncmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("stderr: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ncmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("child process exited with code ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/04/18/5cb821981ffe4.png",alt:"屏幕快照 2019-04-18 下午3.04.49.png"}})]),t._v(" "),a("h3",{attrs:{id:"是什么原因造成这个输出的不一致性呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是什么原因造成这个输出的不一致性呢"}},[t._v("#")]),t._v(" 是什么原因造成这个输出的不一致性呢？")]),t._v(" "),a("p",[t._v("第一反应就是去查找根源，也就是使用频率最高的几个色彩输出的库。")]),t._v(" "),a("p",[t._v("https://github.com/Marak/colors.js")]),t._v(" "),a("p",[t._v("https://github.com/chalk/chalk")]),t._v(" "),a("p",[t._v("由于 colors.js 的扩展性不好，因为现在大多数情况会选用 chalk 来作为色彩输出库。那么我们就来查看他的源码来一探究竟。在 57 行我们可以看到以下字样。")]),t._v(" "),a("p",[t._v("https://github.com/chalk/supports-color/blob/master/index.js#L57")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("if ( ... && stream.isTTY && ... )\n")])])]),a("p",[t._v("必须是终端才是 ansi color, 否则的话是将会输出正常日志。")]),t._v(" "),a("p",[t._v("那么 tty 是什么？")]),t._v(" "),a("p",[t._v("在计算中，"),a("code",[t._v("tty")]),t._v(" 是 Unix 和类 Unix 操作系统中的命令，用于打印连接到标准输入的终端的文件名。")]),t._v(" "),a("p",[t._v("也就是说我们的 "),a("code",[t._v("child_process")]),t._v(" 并不是一个 "),a("code",[t._v("tty")]),t._v(" 的 "),a("code",[t._v("stream")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"如何解决问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何解决问题"}},[t._v("#")]),t._v(" 如何解决问题？")]),t._v(" "),a("p",[t._v("https://github.com/chalk/supports-color#info")]),t._v(" "),a("p",[t._v("我们可以显示传入环境变量 "),a("code",[t._v("FORCE_COLOR=1")]),t._v(" 或者命令带上参数 "),a("code",[t._v("--color")]),t._v(" 来解决这个问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/04/18/5cb827694d0d6.png",alt:"屏幕快照 2019-04-18 下午3.29.31.png"}})]),t._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),a("p",[t._v("现在我们已经完成了从将终端日志的搬到我们的浏览器, 下面总结一下整个流程图。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2019/04/19/5cb93e80f3881.png",alt:"ansi-color-log.png"}})]),t._v(" "),a("h2",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("p",[t._v("https://en.wikipedia.org/wiki/ANSI_escape_code#Colors")]),t._v(" "),a("p",[t._v("https://stackoverflow.com/questions/4842424/list-of-ansi-color-escape-sequences")]),t._v(" "),a("p",[t._v("https://stackoverflow.com/questions/15011478/ansi-questions-x1b25h-and-x1be")]),t._v(" "),a("p",[t._v("https://bluesock.org/~willg/dev/ansi.html")]),t._v(" "),a("p",[t._v("https://www.cnblogs.com/gamesky/archive/2012/07/28/2613264.html")])])}),[],!1,null,null,null);s.default=e.exports}}]);